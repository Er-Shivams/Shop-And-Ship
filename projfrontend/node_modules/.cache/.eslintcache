[{"C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\index.js":"1","C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\App.js":"2","C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\Routes.js":"3","C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\core\\Home.js":"4","C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\backend.js":"5","C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\core\\Base.js":"6","C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\core\\Menu.js":"7","C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\user\\Signup.js":"8","C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\user\\Signin.js":"9","C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\auth\\helper\\index.js":"10","C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\auth\\helper\\PrivateRoutes.js":"11","C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\user\\UserDashBoard.js":"12","C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\auth\\helper\\AdminRoutes.js":"13","C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\user\\AdminDashBoard.js":"14","C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\admin\\AddCategory.js":"15","C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\admin\\helper\\adminapicall.js":"16","C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\admin\\ManageCategories.js":"17","C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\admin\\AddProduct.js":"18","C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\admin\\ManageProducts.js":"19","C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\admin\\UpdateProduct.js":"20","C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\core\\Card.js":"21","C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\core\\helper\\ImageHelper.js":"22","C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\core\\helper\\coreapicalls.js":"23","C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\core\\helper\\cartHelper.js":"24","C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\core\\Cart.js":"25","C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\core\\StripeCheckout.js":"26","C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\core\\helper\\orderHelper.js":"27"},{"size":160,"mtime":1621935918682,"results":"28","hashOfConfig":"29"},{"size":528,"mtime":1618418618393,"results":"30","hashOfConfig":"29"},{"size":1987,"mtime":1621969513237,"results":"31","hashOfConfig":"29"},{"size":1094,"mtime":1622016856819,"results":"32","hashOfConfig":"29"},{"size":48,"mtime":1621769786493,"results":"33","hashOfConfig":"29"},{"size":1183,"mtime":1621774167851,"results":"34","hashOfConfig":"29"},{"size":2893,"mtime":1621948541919,"results":"35","hashOfConfig":"29"},{"size":3780,"mtime":1621834657983,"results":"36","hashOfConfig":"29"},{"size":3736,"mtime":1621852121046,"results":"37","hashOfConfig":"29"},{"size":1896,"mtime":1621935776342,"results":"38","hashOfConfig":"29"},{"size":555,"mtime":1621849061696,"results":"39","hashOfConfig":"29"},{"size":258,"mtime":1621851572691,"results":"40","hashOfConfig":"29"},{"size":588,"mtime":1621849276927,"results":"41","hashOfConfig":"29"},{"size":2980,"mtime":1621948228254,"results":"42","hashOfConfig":"29"},{"size":2568,"mtime":1621883595275,"results":"43","hashOfConfig":"29"},{"size":2590,"mtime":1621885481852,"results":"44","hashOfConfig":"29"},{"size":1953,"mtime":1621949004102,"results":"45","hashOfConfig":"29"},{"size":5142,"mtime":1621947476284,"results":"46","hashOfConfig":"29"},{"size":2310,"mtime":1621947162540,"results":"47","hashOfConfig":"29"},{"size":5397,"mtime":1621946820977,"results":"48","hashOfConfig":"29"},{"size":2246,"mtime":1621971569577,"results":"49","hashOfConfig":"29"},{"size":549,"mtime":1621963867956,"results":"50","hashOfConfig":"29"},{"size":236,"mtime":1621966850574,"results":"51","hashOfConfig":"29"},{"size":1034,"mtime":1582457799000,"results":"52","hashOfConfig":"29"},{"size":1325,"mtime":1622114926283,"results":"53","hashOfConfig":"29"},{"size":2110,"mtime":1622112192811,"results":"54","hashOfConfig":"29"},{"size":456,"mtime":1582457704000,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"10d65mb",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"58"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\index.js",[],["123","124"],"C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\App.js",[],"C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\Routes.js",[],"C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\core\\Home.js",["125","126"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../styles.css\";\r\nimport { API } from \"../backend\";\r\nimport Base from \"./Base\";\r\nimport Card from \"./Card\";\r\nimport { getProducts } from \"./helper/coreapicalls\";\r\n\r\nexport default function Home() {\r\n  const [products, setProducts] = useState([]);\r\n  const [error, setError] = useState(false);\r\n\r\n  const loadAllProduct = () => {\r\n    getProducts().then(data => {\r\n      if (data?.error) {\r\n        setError(data.error);\r\n      } else {\r\n        setProducts(data);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadAllProduct();\r\n  }, []);\r\n\r\n  return (\r\n    <Base title=\"Home Page\" description=\"Welcome to the Tshirt Store\">\r\n      <div className=\"row text-center\">\r\n        <h1 className=\"text-white\">All of tshirts</h1>\r\n        <div className=\"row\">\r\n          {products.map((product, index) => {\r\n            return (\r\n              <div key={index} className=\"col-4 mb-4\">\r\n                <Card product={product} />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </Base>\r\n  );\r\n}\r\n","C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\backend.js",[],"C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\core\\Base.js",[],"C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\core\\Menu.js",["127"],"import React, {Fragment} from 'react';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport { signout, isAuthenticated ,isA} from '../auth/helper';\r\n\r\n\r\nconst currentTab = (history, path) => {\r\n    if(history.location.pathname === path){\r\n        return {color: \"#2ecc72\"}\r\n    }\r\n    else{\r\n        return {color: \"#FFFFFF\"}\r\n    }\r\n}\r\nconst Menu = ({history}) => (\r\n        <div>\r\n            <ul className=\"nav nav-tabs bg-dark\" >\r\n                <li className=\"nav-item\">\r\n                    <Link style={currentTab(history, \"/\")} className=\"nav-link\" to=\"/\">\r\n                        Home\r\n                    </Link>\r\n                </li>\r\n                 <li className=\"nav-item\">\r\n                    <Link style={currentTab(history, \"/Cart\")}  className=\"nav-link\" to=\"/Cart\">\r\n                        Cart\r\n                    </Link>\r\n                </li>\r\n\r\n             {isAuthenticated() && isAuthenticated().user.role===0 && (\r\n                    \r\n                 <li className=\"nav-item\">\r\n                    <Link style={currentTab(history, \"/user/dashboard\")}  className=\"nav-link\" to=\"/user/dashboard\">\r\n                       U. Dashboard\r\n                    </Link>\r\n                </li>\r\n              )}\r\n\r\n            \r\n              {isAuthenticated() && isAuthenticated().user.role===1 && (\r\n\r\n                     <li className=\"nav-item\">\r\n                    <Link style={currentTab(history, \"/admin/dashboard\")} className=\"nav-link\" to=\"/admin/dashboard\">\r\n                        A. Dashboard\r\n                    </Link>\r\n                    </li>\r\n              )}\r\n        \r\n              \r\n                \r\n            \r\n                {!isAuthenticated() && (\r\n                      <Fragment>\r\n                     <li className=\"nav-item\">\r\n                    <Link style={currentTab(history, \"/signup\")} className=\"nav-link\" to=\"/signup\">\r\n                        Signup\r\n                    </Link>\r\n                </li>\r\n                 <li className=\"nav-item\">\r\n                    <Link style={currentTab(history, \"/signin\")} className=\"nav-link\" to=\"/signin\">\r\n                        Signin\r\n                    </Link>\r\n                </li>\r\n                </Fragment>\r\n                )}\r\n                \r\n                {isAuthenticated() && (\r\n                    <li className=\"nav-item\">\r\n                        <span \r\n                        className=\"nav-link text-warning\"\r\n                        onClick={() => {\r\n                            signout(() => {\r\n                                history.push(\"/\")\r\n                            })\r\n                        }}\r\n                        >\r\n                        Signout\r\n                        </span>\r\n                    </li>\r\n                )}\r\n                  \r\n            </ul>\r\n        </div>\r\n)\r\n\r\n\r\nexport default withRouter(Menu);\r\n","C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\user\\Signup.js",["128"],"import React, {useState} from \"react\";\r\nimport Base from \"../core/Base\";\r\nimport { signup } from \"../auth/helper\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Signup = () => {\r\n\r\n        const [values, setValues] = useState({\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            error: \"\",\r\n            success: false\r\n        });\r\n    \r\n        //destructuring\r\n     const {name, email, password, error, success} = values\r\n\r\n     //higher order function hitesh chau. channel\r\n     const handleChange = name => event => {\r\n        setValues({...values, error: false, [name]: event.target.value})\r\n     }\r\n\r\n     const onSubmit = event => {\r\n         event.preventDefault();\r\n         setValues({...values, error: false})\r\n         signup({name, email, password})\r\n         .then(data=>{\r\n             if(data.error){\r\n                 setValues({...values, error: data.error, success, success:false})\r\n\r\n             }else{\r\n                 setValues({\r\n                     ...values,\r\n                     name:\"\",\r\n                     email: \"\",\r\n                     password: \"\",\r\n                     error: \"\",\r\n                     success: true\r\n                 });\r\n             }\r\n         })\r\n         .catch(console.log(\"Error in signup\"));\r\n     }\r\n\r\n    const signUpForm = () => {\r\n\r\n        return(\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-sm-3 text-left\">\r\n                    <form>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"text-light\">Name</label>\r\n                            <input onChange={handleChange(\"name\")} className=\"form-control\" type=\"text\" value={name} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"text-light\">Email</label>\r\n                            <input onChange={handleChange(\"email\")} className=\"form-control\" type=\"email\" value={email}/>\r\n                        </div>\r\n                         <div className=\"form-group\">\r\n                            <label className=\"text-light\">Password</label>\r\n                            <input onChange={handleChange(\"password\")} className=\"form-control\" type=\"password\" value={password} />\r\n                        </div>\r\n                        <br/>\r\n                        \r\n                        <button onClick={onSubmit} className=\"btn btn-success btn-block btn-lg form-control\">Submit</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const successMessage = () => {\r\n      return( \r\n          <div className=\"row\">\r\n                <div className=\"col-md-6 offset-sm-3 text-left\">\r\n      <div className=\"alert alert-success\" \r\n        style={{display: success ? \"\" : \"none\"}}>\r\n\r\n        New account was created successfully.Please\r\n        <Link to= \"/signin\">Login Here</Link>\r\n        </div>\r\n        </div>\r\n        </div>\r\n        ) \r\n    }\r\n     const errorMessage = () => {\r\n        return(\r\n             <div className=\"row\">\r\n                <div className=\"col-md-6 offset-sm-3 text-left\">\r\n            <div className=\"alert alert-danger\" \r\n        style={{display: error ? \"\" : \"none\"}}>\r\n\r\n        {error}\r\n        </div>\r\n        </div>\r\n        </div>\r\n        )\r\n    }\r\n\r\n\r\n    // onSubmit means wait for more stuff and onSubmit() means immediate working \r\n    return (\r\n        <Base title = \"Sign up Page\" description=\"A page for user to Sign up!\">\r\n            {successMessage()}\r\n            {errorMessage()}\r\n            {signUpForm()} \r\n            <p className=\"text-white text-center\">{JSON.stringify(values)}</p>\r\n        </Base>\r\n    );\r\n};\r\n\r\nexport default Signup;","C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\user\\Signin.js",["129"],"import React, {useState} from \"react\";\r\nimport Base from \"../core/Base\";\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport { authenticate, isAuthenticated ,signin } from \"../auth/helper\";\r\n\r\nconst Signin = () => {\r\n\r\n    const [values, setValues] = useState({\r\n        email: \"shivams@gmail.com\",\r\n        password: \"12345\",\r\n        loading: false,\r\n        didRedirect: false\r\n    });\r\n\r\n    const {email, password,error, loading, didRedirect} = values;\r\n    const {user} = isAuthenticated();\r\n\r\n\r\n     //higher order function hitesh chau. channel\r\n     const handleChange = name => event => {\r\n        setValues({...values, error: false, [name]: event.target.value})\r\n     }\r\n\r\n     const onSubmit = event =>{\r\n\r\n        event.preventDefault();\r\n        setValues({...values, error:false, loading:true})\r\n        signin({email, password})\r\n        .then(data => {\r\n                if(data.error){\r\n                    setValues({...values, error:data.error, loading:false})\r\n                }else{\r\n                    authenticate(data, () => {\r\n                        setValues({\r\n                            ...values,\r\n                            didRedirect: true\r\n                        })\r\n                    })\r\n                }\r\n        })\r\n        .catch(console.log(\"signin request failed\"))\r\n\r\n     }\r\n\r\n     const performRedirect = () => {\r\n         //TODO: redirect here\r\n         if(didRedirect){\r\n             if(user && user.role === 1){\r\n                 return <Redirect to=\"/admin/dashboard\" />//<p>redirect to Admin</p>\r\n             }else{\r\n                  return <Redirect to=\"/user/dashboard\" /> //<p>redirect to user dashboard</p>\r\n             }\r\n         }\r\n         if(isAuthenticated()){\r\n             return <Redirect to=\"/\" />\r\n         }\r\n     }\r\n      const loadingMessage = () => {\r\n      return( \r\n            loading && (\r\n                <div className=\"alert alert-info\">\r\n                    <h2>Loading...</h2>\r\n                </div>\r\n            )\r\n        ) \r\n    }\r\n     const errorMessage = () => {\r\n        return(\r\n             <div className=\"row\">\r\n                <div className=\"col-md-6 offset-sm-3 text-left\">\r\n            <div className=\"alert alert-danger\" \r\n        style={{display: error ? \"\" : \"none\"}}>\r\n\r\n        {error}\r\n        </div>\r\n        </div>\r\n        </div>\r\n        )\r\n    }\r\n        const signInForm = () => {\r\n\r\n        return(\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-sm-3 text-left\">\r\n                    <form>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"text-light\">Email</label>\r\n                            <input onChange={handleChange(\"email\")} value={email} className=\"form-control\" type=\"email\" />\r\n                        </div>\r\n                         <div className=\"form-group\">\r\n                            <label className=\"text-light\">Password</label>\r\n                            <input onChange={handleChange(\"password\")} value={password} className=\"form-control\" type=\"password\" />\r\n                        </div>\r\n                        <br/>\r\n                             <button onClick={onSubmit} className=\"btn btn-success btn-lg btn-block form-control\">Submit</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Base title = \"Sign up Page\" description=\"A page for user to Sign in!\">\r\n            {loadingMessage()}\r\n            {errorMessage()}\r\n            {signInForm()}\r\n            {performRedirect()}\r\n            <p className=\"text-white text-center\">{JSON.stringify(values)}</p>\r\n\r\n        </Base>\r\n    );\r\n};\r\n\r\nexport default Signin;","C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\auth\\helper\\index.js",[],"C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\auth\\helper\\PrivateRoutes.js",[],"C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\user\\UserDashBoard.js",[],"C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\auth\\helper\\AdminRoutes.js",[],"C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\user\\AdminDashBoard.js",["130"],"import React from \"react\";\r\nimport Base from \"../core/Base\";\r\nimport { isAuthenticated } from \"../auth/helper/index\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst AdminDashBoard = () => {\r\n  const {\r\n    user: { name, email, role }\r\n  } = isAuthenticated();\r\n\r\n  const adminLeftSide = () => {\r\n    return (\r\n      <div className=\"card\">\r\n        <h4 className=\"card-header bg-dark text-white text-center\">Admin Navigation</h4>\r\n        <ul className=\"list-group\">\r\n          <li className=\"list-group-item list-group-item-action list-group-item-primary text-center\">  {/* adding list-group-item-action */}\r\n            <Link to=\"/admin/create/category\" className=\"nav-link text-success\">\r\n              Create Categories\r\n            </Link>\r\n          </li>\r\n        \r\n           <li className=\"list-group-item list-group-item-action list-group-item-secondary text-center\"> \r\n           {/* adding list-group-item-action */}\r\n            <Link to=\"/admin/categories\" className=\"nav-link text-success\">\r\n              Manage Categories\r\n            </Link>\r\n          </li>\r\n          <li className=\"list-group-item list-group-item-action list-group-item-success text-center\"> {/* adding list-group-item-action */}\r\n            <Link to=\"/admin/create/product\" className=\"nav-link text-success\">\r\n              Create Product\r\n            </Link>\r\n          </li>\r\n          <li className=\"list-group-item list-group-item-action list-group-item-danger text-center\"> {/* adding list-group-item-action */}\r\n            <Link to=\"/admin/products\" className=\"nav-link text-success\">\r\n              Manage Products\r\n            </Link>\r\n          </li>\r\n          <li className=\"list-group-item list-group-item-action list-group-item-warning text-center\"> {/* adding list-group-item-action */}\r\n            <Link to=\"/admin/orders\" className=\"nav-link text-success\">\r\n              Manage Orders\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const adminRightSide = () => {\r\n    return (\r\n      <div className=\"card mb-4\">\r\n        <h4 className=\"card-header\">Admin Information</h4>\r\n        <ul className=\"list-group\">\r\n          <li className=\"list-group-item\">\r\n            <span className=\"badge bg-success mr-2\">Name:</span> {name}\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <span className=\"badge bg-success mr-2\">Email:</span> {email}\r\n          </li>\r\n\r\n          <li className=\"list-group-item\">\r\n            <span className=\"badge bg-danger\">Admin Area</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <Base\r\n      title=\"Welcome to admin Area\"\r\n      description=\"Manage all of your products here\"\r\n      className=\"container bg-success p-4\"\r\n    >\r\n      <div className=\"row\">\r\n        <div className=\"col-3\">{adminLeftSide()}</div>\r\n        <div className=\"col-9\">{adminRightSide()}</div>\r\n      </div>\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default AdminDashBoard;\r\n","C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\admin\\AddCategory.js",[],"C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\admin\\helper\\adminapicall.js",[],"C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\admin\\ManageCategories.js",["131","132"],"import React, { useState, useEffect } from \"react\";\r\nimport Base from \"../core/Base\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../auth/helper\";\r\nimport { getCategories } from \"./helper/adminapicall\";\r\n\r\nconst ManageCategories = () => {\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const preload = () => {\r\n    getCategories().then(data => {\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        setCategories(data);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    preload();\r\n  }, []);\r\n\r\n  return (\r\n    <Base title=\"Welcome admin\" description=\"Manage products here\">\r\n      <h2 className=\"mb-4\">All products:</h2>\r\n      <Link className=\"btn btn-info\" to={`/admin/dashboard`}>\r\n        <span className=\"\">Admin Home</span>\r\n      </Link>\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <h2 className=\"text-center text-white my-3\">Total 3 products</h2>\r\n          {categories.map((category, index) => {\r\n            return (\r\n              <h3 className=\"text-white\" key={index}>\r\n                {category.name}\r\n              </h3>\r\n            );\r\n          })}\r\n          <div className=\"row text-center mb-2 \">\r\n            <div className=\"col-4\">\r\n              <h3 className=\"text-white text-left\">I write code</h3>\r\n            </div>\r\n            <div className=\"col-4\">\r\n              <Link\r\n                className=\"btn btn-success\"\r\n                to={`/admin/product/update/productId`}\r\n              >\r\n                <span className=\"\">Update</span>\r\n              </Link>\r\n            </div>\r\n            <div className=\"col-4\">\r\n              <button onClick={() => {}} className=\"btn btn-danger\">\r\n                Delete\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default ManageCategories;\r\n","C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\admin\\AddProduct.js",["133","134","135","136","137"],"import React, {useState, useEffect} from 'react'\r\nimport Base from '../core/Base'\r\nimport {Link} from 'react-router-dom'\r\nimport { getCategories, createProduct } from './helper/adminapicall';\r\nimport { isAuthenticated } from '../auth/helper';\r\n\r\n\r\nconst AddProduct = () => {\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n    const [values, setValues] = useState({\r\n        name: \"\",\r\n        description: \"\",\r\n        price:\"\",\r\n        stock:\"\",\r\n        photo:\"\",\r\n        categories:[],\r\n        category:\"\",\r\n        loading: false,\r\n        error:\"\",\r\n        createdProduct:\"\",\r\n        getaRedirect: \"\",\r\n        formData: \"\"\r\n\r\n    });\r\n\r\n        const {name, description, price, stock, categories, category,loading,error,createdProduct,getaRedirect,formData} = values;\r\n\r\n        const preload = () => {\r\n            getCategories()\r\n            .then(data => {\r\n                 console.log(data);\r\n                if(data?.error){ //data.error\r\n                    setValues({...values, error: data.error})\r\n                }else{\r\n                    setValues({...values, categories: data, formData: new FormData()})\r\n                    // console.log(\"CATE:\",categories);\r\n                }\r\n            })\r\n        }\r\n        \r\n        useEffect(() => {\r\n           preload();\r\n        }, []);\r\n\r\n    const onSubmit = (event) => {\r\n      event.preventDefault();\r\n      setValues({...values, error: \"\", loading: true})\r\n      createProduct(user._id, token, formData).then(data =>{\r\n        if(data.error){\r\n          setValues({...values, error: data.error})\r\n        }else{\r\n          setValues({\r\n            ...values,\r\n            name:\"\",\r\n            description: \"\",\r\n            price: \"\",\r\n            photo: \"\",\r\n            stock: \"\",\r\n            loading: false,\r\n            createdProduct: data.name\r\n          \r\n          \r\n          })\r\n        }\r\n      })\r\n    }\r\n const handleChange = name => event => {\r\n    const value = name === \"photo\" ? event.target.files[0] : event.target.value;\r\n    formData.set(name, value);\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n\r\n\r\n  const successMessage = () => (\r\n     <div className=\"alert alert-success mt-2\" \r\n    style={{display: createdProduct ? \"\" : \"none\"}}    \r\n    >\r\n      <h4>{createdProduct} created successfully</h4>\r\n    </div>\r\n  )\r\n   \r\n   \r\n\r\n    const createProductForm = () => (\r\n    <form >\r\n    <div className=\"my-2\"><span >Post photo</span></div>  \r\n      <div className=\"form-group\">\r\n        <label className=\"form-control btn btn-block btn-success my-1\">\r\n          <input\r\n        //   className=\"form-control\"\r\n            onChange={handleChange(\"photo\")}\r\n            type=\"file\"\r\n            name=\"photo\"\r\n            accept=\"image\"\r\n            placeholder=\"choose a file\"\r\n          />\r\n        </label>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <input\r\n          onChange={handleChange(\"name\")}\r\n          name=\"photo\"\r\n          className=\"form-control my-2\"\r\n          placeholder=\"Name\"\r\n          value={name}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <textarea\r\n          onChange={handleChange(\"description\")}\r\n          name=\"photo\"\r\n          className=\"form-control my-2\"\r\n          placeholder=\"Description\"\r\n          value={description}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <input\r\n          onChange={handleChange(\"price\")}\r\n          type=\"number\"\r\n          className=\"form-control my-2\"\r\n          placeholder=\"Price\"\r\n          value={price}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <select\r\n          onChange={handleChange(\"category\")}\r\n          className=\"form-control my-2\"\r\n          placeholder=\"Category\"\r\n        >\r\n          <option>Select</option>\r\n          {/* <option value=\"a\">a</option>\r\n          <option value=\"b\">b</option> */}\r\n          {categories && categories.map((cate, index) => (\r\n            <option key={index} value={cate._id}>{cate.name} </option>\r\n          ))\r\n          }\r\n          {/* console.log(cate.name) */}\r\n        </select>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <input\r\n          onChange={handleChange(\"stock\")}\r\n          type=\"number\"\r\n          className=\"form-control my-2\"\r\n          placeholder=\"Stock\"\r\n          value={stock}\r\n        />\r\n      </div>\r\n      \r\n      <button type=\"submit\" \r\n      onClick={onSubmit} \r\n      className=\"btn btn-outline-success mb-3 my-3\">\r\n        Create Product\r\n      </button>\r\n    </form>\r\n  );\r\n\r\n\r\n\r\n    return (\r\n        <Base title=\"Add Product Here\" \r\n        description=\"Welcome to product creation section\"\r\n        className=\"container bg-info p-4\"\r\n        >\r\n            <Link to= \"/admin/dashboard\" className=\"btn btn-md btn-dark mb-3\">\r\n                Admin Home\r\n            </Link>\r\n            <div className=\"row bg-dark text-white rounded\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                {successMessage()}\r\n                {createProductForm()}\r\n                </div>\r\n            </div>\r\n        </Base>\r\n    )\r\n}\r\n\r\nexport default AddProduct;","C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\admin\\ManageProducts.js",[],"C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\admin\\UpdateProduct.js",["138","139","140","141","142"],"import React, { useState, useEffect } from \"react\";\r\nimport Base from \"../core/Base\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  getCategories,\r\n  getProduct,\r\n  updateProduct\r\n} from \"./helper/adminapicall\";\r\nimport { isAuthenticated } from \"../auth/helper/index\";\r\n\r\nconst UpdateProduct = ({ match }) => {\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    price: \"\",\r\n    stock: \"\",\r\n    photo: \"\",\r\n    categories: [],\r\n    category: \"\",\r\n    loading: false,\r\n    error: \"\",\r\n    createdProduct: \"\",\r\n    getaRedirect: false,\r\n    formData: \"\"\r\n  });\r\n\r\n  const {\r\n    name,\r\n    description,\r\n    price,\r\n    stock,\r\n    categories,\r\n    category,\r\n    loading,\r\n    error,\r\n    createdProduct,\r\n    getaRedirect,\r\n    formData\r\n  } = values;\r\n\r\n  const preload = productId => {\r\n    getProduct(productId).then(data => {\r\n      //console.log(data);\r\n      if (data.error) {\r\n        setValues({ ...values, error: data.error });\r\n      } else {\r\n        preloadCategories();\r\n        setValues({\r\n          ...values,\r\n          name: data.name,\r\n          description: data.description,\r\n          price: data.price,\r\n          category: data.category._id,\r\n          stock: data.stock,\r\n          formData: new FormData()\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const preloadCategories = () => {\r\n    getCategories().then(data => {\r\n      if (data.error) {\r\n        setValues({ ...values, error: data.error });\r\n      } else {\r\n        setValues({\r\n          categories: data,\r\n          formData: new FormData()\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    preload(match.params.productId);\r\n  }, []);\r\n\r\n  //TODO: work on it\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    setValues({ ...values, error: \"\", loading: true });\r\n\r\n    updateProduct(match.params.productId, user._id, token, formData).then(\r\n      data => {\r\n        if (data.error) {\r\n          setValues({ ...values, error: data.error });\r\n        } else {\r\n          setValues({\r\n            ...values,\r\n            name: \"\",\r\n            description: \"\",\r\n            price: \"\",\r\n            photo: \"\",\r\n            stock: \"\",\r\n            loading: false,\r\n            createdProduct: data.name\r\n          });\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleChange = name => event => {\r\n    const value = name === \"photo\" ? event.target.files[0] : event.target.value;\r\n    formData.set(name, value);\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n\r\n  const successMessage = () => (\r\n    <div\r\n      className=\"alert alert-success mt-3\"\r\n      style={{ display: createdProduct ? \"\" : \"none\" }}\r\n    >\r\n      <h4>{createdProduct} updated successfully</h4>\r\n    </div>\r\n  );\r\n\r\n  const createProductForm = () => (\r\n    <form>\r\n     <div className=\"my-1\"><span>Post photo</span></div> \r\n      <div className=\"form-group\">\r\n        <label className=\"form-control btn btn-block btn-success\">\r\n          <input\r\n            onChange={handleChange(\"photo\")}\r\n            type=\"file\"\r\n            name=\"photo\"\r\n            accept=\"image\"\r\n            placeholder=\"choose a file\"\r\n          />\r\n        </label>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <input\r\n          onChange={handleChange(\"name\")}\r\n          name=\"photo\"\r\n          className=\"form-control my-2\"\r\n          placeholder=\"Name\"\r\n          value={name}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <textarea\r\n          onChange={handleChange(\"description\")}\r\n          name=\"photo\"\r\n          className=\"form-control my-2\"\r\n          placeholder=\"Description\"\r\n          value={description}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <input\r\n          onChange={handleChange(\"price\")}\r\n          type=\"number\"\r\n          className=\"form-control my-2\"\r\n          placeholder=\"Price\"\r\n          value={price}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <select\r\n          onChange={handleChange(\"category\")}\r\n          className=\"form-control my-2\"\r\n          placeholder=\"Category\"\r\n        >\r\n          <option>Select</option>\r\n          {categories &&\r\n            categories.map((cate, index) => (\r\n              <option key={index} value={cate._id}>\r\n                {cate.name}\r\n              </option>\r\n            ))}\r\n        </select>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <input\r\n          onChange={handleChange(\"stock\")}\r\n          type=\"number\"\r\n          className=\"form-control my-2\"\r\n          placeholder=\"Stock\"\r\n          value={stock}\r\n        />\r\n      </div>\r\n\r\n      <button\r\n        type=\"submit\"\r\n        onClick={onSubmit}\r\n        className=\"btn btn-outline-success mb-3 my-3\"\r\n      >\r\n        Update Product\r\n      </button>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <Base\r\n      title=\"Update your product here\"\r\n      description=\"Welcome to product updation section\"\r\n      className=\"container bg-info p-4\"\r\n    >\r\n      <Link to=\"/admin/dashboard\" className=\"btn btn-md btn-dark mb-3\">\r\n        Admin Home\r\n      </Link>\r\n      <div className=\"row bg-dark text-white rounded\">\r\n        <div className=\"col-md-8 offset-md-2\">\r\n          {successMessage()}\r\n          {createProductForm()}\r\n        </div>\r\n      </div>\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default UpdateProduct;\r\n","C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\core\\Card.js",["143","144","145"],"import React, { useState, useEffect } from \"react\";\r\nimport ImageHelper from \"./helper/ImageHelper\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { addItemToCart, removeItemFromCart } from \"./helper/cartHelper\";\r\n\r\nconst Card = ({\r\n  product,\r\n  addtoCart = true,\r\n  removeFromCart = false,\r\n  setReload = f => f,\r\n  //   function(f){return f}\r\n  reload = undefined\r\n}) => {\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [count, setCount] = useState(product.count);\r\n\r\n  const cartTitle = product ? product.name : \"A photo from pexels\";\r\n  const cartDescrption = product ? product.description : \"Default description\";\r\n  const cartPrice = product ? product.price : \"DEFAULT\";\r\n\r\n  const addToCart = () => {\r\n    addItemToCart(product, () => setRedirect(true));\r\n  };\r\n\r\n  const getARedirect = redirect => {\r\n    if (redirect) {\r\n      return <Redirect to=\"/cart\" />;\r\n    }\r\n  };\r\n\r\n  const showAddToCart = addtoCart => {\r\n    return (\r\n      addtoCart && (\r\n        <button\r\n          onClick={addToCart}\r\n          className=\"btn btn-block btn-outline-success mt-2 mb-2\"\r\n        >\r\n          Add to Cart\r\n        </button>\r\n      )\r\n    );\r\n  };\r\n\r\n  const showRemoveFromCart = removeFromCart => {\r\n    return (\r\n      removeFromCart && (\r\n        <button\r\n          onClick={() => {\r\n            removeItemFromCart(product._id);\r\n            setReload(!reload);\r\n          }}\r\n          className=\"btn btn-block btn-outline-danger mt-2 mb-2\"\r\n        >\r\n          Remove from cart\r\n        </button>\r\n      )\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"card text-white bg-dark border border-info \">\r\n      <div className=\"card-header lead\">{cartTitle}</div>\r\n      <div className=\"card-body\">\r\n        {getARedirect(redirect)}\r\n        <ImageHelper product={product} />\r\n        <p className=\"lead bg-success font-weight-normal text-wrap\">\r\n          {cartDescrption}\r\n        </p>\r\n        <p className=\"btn btn-success rounded  btn-sm px-4\">$ {cartPrice}</p>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">{showAddToCart(addtoCart)}</div>\r\n          <div className=\"col-12\">{showRemoveFromCart(removeFromCart)}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\core\\helper\\ImageHelper.js",["146"],"import React from \"react\";\nimport { API } from \"../../backend\";\n\nconst ImageHelper = ({ product }) => {\n  const imageurl = product ? `${API}/product/photo/${product._id}`: `https://images.pexels.com/photos/3561339/pexels-photo-3561339.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940`;\n  return (\n    <div className=\"rounded border border-info p-2\">\n      <img\n        src={imageurl}\n        alt=\"photo\"\n        style={{ maxHeight: \"100%\", maxWidth: \"80%\" }}\n        className=\"mb-2 rounded\"\n      />\n    </div>\n  );\n};\n\nexport default ImageHelper;\n","C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\core\\helper\\coreapicalls.js",[],"C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\core\\helper\\cartHelper.js",["147"],"export const addItemToCart = (item, next) => {\n  let cart = [];\n  if (typeof window !== undefined) {\n    if (localStorage.getItem(\"cart\")) {\n      cart = JSON.parse(localStorage.getItem(\"cart\"));\n    }\n    cart.push({\n      ...item,\n      count: 1\n    });\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n    next();\n  }\n};\n\nexport const loadCart = () => {\n  if (typeof window !== undefined) {\n    if (localStorage.getItem(\"cart\")) {\n      return JSON.parse(localStorage.getItem(\"cart\"));\n    }\n  }\n};\n\nexport const removeItemFromCart = productId => {\n  let cart = [];\n  if (typeof window !== undefined) {\n    if (localStorage.getItem(\"cart\")) {\n      cart = JSON.parse(localStorage.getItem(\"cart\"));\n    }\n    cart.map((product, i) => {\n      if (product._id === productId) {\n        cart.splice(i, 1);\n      }\n    });\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n  }\n  return cart;\n};\n\nexport const cartEmpty = next => {\n  if (typeof window !== undefined) {\n    localStorage.removeItem(\"cart\");\n    next();\n  }\n};\n","C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\core\\Cart.js",["148","149"],"C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\core\\StripeCheckout.js",["150","151","152","153","154","155","156","157","158"],"import React, { useState, useEffect } from \"react\";\nimport { isAuthenticated } from \"../auth/helper\";\nimport { cartEmpty, loadCart } from \"./helper/cartHelper\";\nimport { Link } from \"react-router-dom\";\nimport StripeCheckoutButton from  \"react-stripe-checkout\";\nimport { API } from \"../backend\";\nimport { createOrder } from \"./helper/orderHelper\";\n\n\n\nconst StripeCheckout = ({\n  products,\n  setReload = f => f,\n  reload = undefined\n}) => {\n  const [data, setData] = useState({\n    loading: false,\n    success: false,\n    error: \"\",\n    address: \"\"\n  });\n\n  const token = isAuthenticated() && isAuthenticated().token;\n  const userId = isAuthenticated() && isAuthenticated().user._id;\n\n  const getFinalAmount = () => {\n    let amount = 0;\n    products.map(p => {\n      amount = amount + p.price;\n    });\n    return amount;\n  };\n\n  const makePayment = token => {\n     const body = {\n       token,\n       products\n     }\n     const headers = {\n       \"Content-Type\": \"application/json\"\n     }\n\n     return fetch( `${API}/stripepayment`, {\n       method: \"POST\",\n       headers,\n       body: JSON.stringify(body)\n     }).then(response => {\n       console.log(response)\n       //call further method\n      //  const {status} = response or\n      // console.log(\"STATUS\",response.status);\n     }).catch(error => console.log(error))\n  }\n\n  const showStripeButton = () => {\n    return isAuthenticated() ? (\n      <StripeCheckoutButton\n        stripeKey=\"pk_test_51IvIwdSJ8erOVHDrZ78a2qFuyjFUNDI4Be9SvHLDZDkywMrJ4a2rJcMiMfUTnadBxJUt8prueLmaPHwE1B0E0E1B00RRpfGdF9\"\n        token = {makePayment}\n        amount = {getFinalAmount() * 100}\n        name= \"Buy tshirts\"\n        shippingAddress\n        billingAddress\n\n      >\n          <button className=\"btn btn-success\">Pay with stripe</button>\n      </StripeCheckoutButton>\n      \n    ) : (\n      <Link to=\"/signin\">\n        <button className=\"btn btn-warning\">Signin</button>\n      </Link>\n    );\n  };\n\n  return (\n    <div>\n      <h3 className=\"text-white\">Stripe Checkout {getFinalAmount()}</h3>\n      {showStripeButton()}\n    </div>\n  );\n};\n\nexport default StripeCheckout;\n","C:\\Users\\Shivam\\Desktop\\New folder\\projfrontend\\src\\core\\helper\\orderHelper.js",[],{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":3,"column":10,"nodeType":"165","messageId":"166","endLine":3,"endColumn":13},{"ruleId":"163","severity":1,"message":"167","line":10,"column":10,"nodeType":"165","messageId":"166","endLine":10,"endColumn":15},{"ruleId":"163","severity":1,"message":"168","line":3,"column":36,"nodeType":"165","messageId":"166","endLine":3,"endColumn":39},{"ruleId":"169","severity":1,"message":"170","line":30,"column":68,"nodeType":"171","messageId":"172","endLine":30,"endColumn":75},{"ruleId":"163","severity":1,"message":"173","line":3,"column":9,"nodeType":"165","messageId":"166","endLine":3,"endColumn":13},{"ruleId":"163","severity":1,"message":"174","line":8,"column":26,"nodeType":"165","messageId":"166","endLine":8,"endColumn":30},{"ruleId":"163","severity":1,"message":"175","line":10,"column":11,"nodeType":"165","messageId":"166","endLine":10,"endColumn":15},{"ruleId":"163","severity":1,"message":"176","line":10,"column":17,"nodeType":"165","messageId":"166","endLine":10,"endColumn":22},{"ruleId":"163","severity":1,"message":"177","line":28,"column":61,"nodeType":"165","messageId":"166","endLine":28,"endColumn":69},{"ruleId":"163","severity":1,"message":"178","line":28,"column":70,"nodeType":"165","messageId":"166","endLine":28,"endColumn":77},{"ruleId":"163","severity":1,"message":"167","line":28,"column":78,"nodeType":"165","messageId":"166","endLine":28,"endColumn":83},{"ruleId":"163","severity":1,"message":"179","line":28,"column":99,"nodeType":"165","messageId":"166","endLine":28,"endColumn":111},{"ruleId":"180","severity":1,"message":"181","line":45,"column":12,"nodeType":"182","endLine":45,"endColumn":14,"suggestions":"183"},{"ruleId":"163","severity":1,"message":"177","line":35,"column":5,"nodeType":"165","messageId":"166","endLine":35,"endColumn":13},{"ruleId":"163","severity":1,"message":"178","line":36,"column":5,"nodeType":"165","messageId":"166","endLine":36,"endColumn":12},{"ruleId":"163","severity":1,"message":"167","line":37,"column":5,"nodeType":"165","messageId":"166","endLine":37,"endColumn":10},{"ruleId":"163","severity":1,"message":"179","line":39,"column":5,"nodeType":"165","messageId":"166","endLine":39,"endColumn":17},{"ruleId":"180","severity":1,"message":"184","line":78,"column":6,"nodeType":"182","endLine":78,"endColumn":8,"suggestions":"185"},{"ruleId":"163","severity":1,"message":"186","line":1,"column":27,"nodeType":"165","messageId":"166","endLine":1,"endColumn":36},{"ruleId":"163","severity":1,"message":"187","line":15,"column":10,"nodeType":"165","messageId":"166","endLine":15,"endColumn":15},{"ruleId":"163","severity":1,"message":"188","line":15,"column":17,"nodeType":"165","messageId":"166","endLine":15,"endColumn":25},{"ruleId":"189","severity":1,"message":"190","line":8,"column":7,"nodeType":"191","endLine":13,"endColumn":9},{"ruleId":"192","severity":1,"message":"193","line":30,"column":27,"nodeType":"194","messageId":"195","endLine":30,"endColumn":29},{"ruleId":"163","severity":1,"message":"164","line":3,"column":10,"nodeType":"165","messageId":"166","endLine":3,"endColumn":13},{"ruleId":"163","severity":1,"message":"196","line":34,"column":9,"nodeType":"165","messageId":"166","endLine":34,"endColumn":21},{"ruleId":"163","severity":1,"message":"186","line":1,"column":27,"nodeType":"165","messageId":"166","endLine":1,"endColumn":36},{"ruleId":"163","severity":1,"message":"197","line":3,"column":10,"nodeType":"165","messageId":"166","endLine":3,"endColumn":19},{"ruleId":"163","severity":1,"message":"198","line":3,"column":21,"nodeType":"165","messageId":"166","endLine":3,"endColumn":29},{"ruleId":"163","severity":1,"message":"199","line":7,"column":10,"nodeType":"165","messageId":"166","endLine":7,"endColumn":21},{"ruleId":"163","severity":1,"message":"200","line":16,"column":10,"nodeType":"165","messageId":"166","endLine":16,"endColumn":14},{"ruleId":"163","severity":1,"message":"201","line":16,"column":16,"nodeType":"165","messageId":"166","endLine":16,"endColumn":23},{"ruleId":"163","severity":1,"message":"176","line":23,"column":9,"nodeType":"165","messageId":"166","endLine":23,"endColumn":14},{"ruleId":"163","severity":1,"message":"202","line":24,"column":9,"nodeType":"165","messageId":"166","endLine":24,"endColumn":15},{"ruleId":"192","severity":1,"message":"193","line":28,"column":20,"nodeType":"194","messageId":"195","endLine":28,"endColumn":22},"no-native-reassign",["203"],"no-negated-in-lhs",["204"],"no-unused-vars","'API' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'isA' is defined but never used.","no-dupe-keys","Duplicate key 'success'.","ObjectExpression","unexpected","'Link' is defined but never used.","'role' is assigned a value but never used.","'user' is assigned a value but never used.","'token' is assigned a value but never used.","'category' is assigned a value but never used.","'loading' is assigned a value but never used.","'getaRedirect' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'preload'. Either include it or remove the dependency array.","ArrayExpression",["205"],"React Hook useEffect has missing dependencies: 'match.params.productId' and 'preload'. Either include them or remove the dependency array.",["206"],"'useEffect' is defined but never used.","'count' is assigned a value but never used.","'setCount' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'loadCheckout' is assigned a value but never used.","'cartEmpty' is defined but never used.","'loadCart' is defined but never used.","'createOrder' is defined but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'userId' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},"Update the dependencies array to be: [preload]",{"range":"211","text":"212"},"Update the dependencies array to be: [match.params.productId, preload]",{"range":"213","text":"214"},[1310,1312],"[preload]",[1718,1720],"[match.params.productId, preload]"]